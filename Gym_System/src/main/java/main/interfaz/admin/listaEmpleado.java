package main.interfaz.admin;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import main.dao.EmpleadoDao;
import main.models.Empleado;
import main.utils.Utils;

/**
 *
 * @author marco
 */
public class listaEmpleado extends javax.swing.JPanel {

    /**
     * Creates new form listaEmpleado
     */
    EmpleadoDao dao = new EmpleadoDao();

    public listaEmpleado() {
        initComponents();
        cargarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Emp = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_DPI_Eli = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_DPI_Mod = new javax.swing.JTextField();
        bt_Eliminar = new javax.swing.JButton();
        bt_modificar = new javax.swing.JButton();

        puerta.setBackground(new java.awt.Color(255, 255, 255));

        tab_Emp.setBackground(new java.awt.Color(255, 85, 30));
        tab_Emp.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        tab_Emp.setForeground(new java.awt.Color(255, 255, 255));
        tab_Emp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "DPI", "Nombre", "Apellido", "Password", "Telefono", "Direccion", "Sucursal", "Rol"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab_Emp);
        if (tab_Emp.getColumnModel().getColumnCount() > 0) {
            tab_Emp.getColumnModel().getColumn(0).setResizable(false);
            tab_Emp.getColumnModel().getColumn(1).setResizable(false);
            tab_Emp.getColumnModel().getColumn(2).setResizable(false);
            tab_Emp.getColumnModel().getColumn(3).setResizable(false);
            tab_Emp.getColumnModel().getColumn(4).setMinWidth(100);
            tab_Emp.getColumnModel().getColumn(4).setMaxWidth(100);
            tab_Emp.getColumnModel().getColumn(5).setResizable(false);
            tab_Emp.getColumnModel().getColumn(6).setMinWidth(100);
            tab_Emp.getColumnModel().getColumn(6).setMaxWidth(100);
            tab_Emp.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("FreeMono", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 85, 30));
        jLabel1.setText("Lista Empleados");

        jLabel2.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 85, 30));
        jLabel2.setText("Modificar");

        txt_DPI_Eli.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        txt_DPI_Eli.setForeground(new java.awt.Color(0, 0, 0));
        txt_DPI_Eli.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 85, 30)));

        jLabel3.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 85, 30));
        jLabel3.setText("Eliminar");

        txt_DPI_Mod.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        txt_DPI_Mod.setForeground(new java.awt.Color(0, 0, 0));
        txt_DPI_Mod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 85, 30)));
        txt_DPI_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DPI_ModActionPerformed(evt);
            }
        });

        bt_Eliminar.setBackground(new java.awt.Color(255, 85, 30));
        bt_Eliminar.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        bt_Eliminar.setText("Eliminar");
        bt_Eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EliminarActionPerformed(evt);
            }
        });

        bt_modificar.setBackground(new java.awt.Color(255, 85, 30));
        bt_modificar.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_modificar.setForeground(new java.awt.Color(255, 255, 255));
        bt_modificar.setText("Modificar");
        bt_modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_modificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout puertaLayout = new javax.swing.GroupLayout(puerta);
        puerta.setLayout(puertaLayout);
        puertaLayout.setHorizontalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(296, 296, 296))
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(txt_DPI_Eli, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_DPI_Mod, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(bt_Eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 388, Short.MAX_VALUE)
                .addComponent(bt_modificar)
                .addGap(119, 119, 119))
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(puertaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        puertaLayout.setVerticalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, puertaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_DPI_Mod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_DPI_Eli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bt_Eliminar)
                            .addComponent(bt_modificar))
                        .addContainerGap(53, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void mostrarPanel(JPanel p) {
        p.setSize(puerta.getSize());
        p.setSize(1000, 470);
        p.setLocation(0, 0);
        puerta.removeAll();
        puerta.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        puerta.revalidate();
        puerta.repaint();
    }
    private void bt_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EliminarActionPerformed
        // TODO add your handling code here:
        try {
            long dpi = Long.parseLong(txt_DPI_Eli.getText());
            int filas = dao.eliminarDPI(dpi);

            if (filas > 0) {
                JOptionPane.showMessageDialog(this, "Empleado eliminado");
                txt_DPI_Eli.setText("");
                cargarLista();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro un empleado con ese DPI");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El DPI debe ser un numero valido");
        }
    }//GEN-LAST:event_bt_EliminarActionPerformed

    private void bt_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_modificarActionPerformed
        // TODO add your handling code here:
        try {
            long mdpi = Long.parseLong(txt_DPI_Mod.getText());
            Empleado emp = dao.buscarPorDPI(mdpi);

            if (emp != null) {
                long dpi = emp.getDpi();
                String nombre = emp.getNombre();
                String apellido = emp.getApellido();
                String password = emp.getPassword();
                String telefono = emp.getTelefono();
                String direccion = emp.getDireccion();
                int sucursal = emp.getIdSucursal();
                int rol = emp.getIdRol();
                mostrarPanel(new modEmpleado(dpi, nombre, apellido, password, telefono, direccion, sucursal, rol));
                
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro empleado con ese DPI");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El DPI debe ser un numero valido");
        }
    }//GEN-LAST:event_bt_modificarActionPerformed

    private void txt_DPI_ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DPI_ModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DPI_ModActionPerformed

    public void cargarLista() {
        DefaultTableModel modelo = (DefaultTableModel) tab_Emp.getModel();
        modelo.setRowCount(0);
        List<Empleado> lista = dao.listar();

        for (Empleado emp : lista) {
            modelo.addRow(new Object[]{
                emp.getDpi(),
                emp.getNombre(),
                emp.getApellido(),
                emp.getPassword(),
                emp.getTelefono(),
                emp.getDireccion(),
                Utils.getSucursalNombre(emp.getIdSucursal()),
                Utils.getRolNombre(emp.getIdRol())
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Eliminar;
    private javax.swing.JButton bt_modificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel puerta;
    private javax.swing.JTable tab_Emp;
    private javax.swing.JTextField txt_DPI_Eli;
    private javax.swing.JTextField txt_DPI_Mod;
    // End of variables declaration//GEN-END:variables
}

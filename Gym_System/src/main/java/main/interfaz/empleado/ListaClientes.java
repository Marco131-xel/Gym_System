package main.interfaz.empleado;

import java.awt.Color;
import java.awt.Font;
import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import main.dao.*;
import main.models.*;
import main.utils.Utils;

/**
 *
 * @author marco
 */
public class ListaClientes extends javax.swing.JPanel {

    /**
     * Creates new form ListaClientes
     */
    ClienteDao dao = new ClienteDao();
    Entrenador_ClienteDao enCliDao = new Entrenador_ClienteDao();
    
    public ListaClientes() {
        initComponents();
        JTableHeader header = tab_Cliente.getTableHeader();
        header.setBackground(Color.MAGENTA);
        header.setForeground(Color.black);
        tab_Cliente.setGridColor(Color.WHITE);
        tab_Cliente.setShowVerticalLines(true);
        header.setFont(new Font("Free Mono", Font.BOLD, 15));
        cargarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Cliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        bt_Mod = new javax.swing.JButton();
        bt_Eli = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        bt_Mem = new javax.swing.JButton();
        bt_Asig = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        bt_ModCoach = new javax.swing.JButton();

        puerta.setBackground(new java.awt.Color(255, 255, 255));

        tab_Cliente.setBackground(new java.awt.Color(204, 0, 204));
        tab_Cliente.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        tab_Cliente.setForeground(new java.awt.Color(255, 255, 255));
        tab_Cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DPI", "Nombre", "Entrenador"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tab_Cliente.setFocusable(false);
        jScrollPane1.setViewportView(tab_Cliente);
        if (tab_Cliente.getColumnModel().getColumnCount() > 0) {
            tab_Cliente.getColumnModel().getColumn(0).setMinWidth(80);
            tab_Cliente.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        jLabel2.setFont(new java.awt.Font("FreeMono", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setText("Lista Clientes");

        bt_Mod.setBackground(new java.awt.Color(255, 255, 0));
        bt_Mod.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Mod.setForeground(new java.awt.Color(0, 0, 0));
        bt_Mod.setText("Modificar");
        bt_Mod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ModActionPerformed(evt);
            }
        });

        bt_Eli.setBackground(new java.awt.Color(204, 0, 0));
        bt_Eli.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Eli.setForeground(new java.awt.Color(255, 255, 255));
        bt_Eli.setText("Eliminar");
        bt_Eli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Eli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EliActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Acciones");

        bt_Mem.setBackground(new java.awt.Color(0, 0, 204));
        bt_Mem.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Mem.setForeground(new java.awt.Color(255, 255, 255));
        bt_Mem.setText("Membresia");
        bt_Mem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Mem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_MemActionPerformed(evt);
            }
        });

        bt_Asig.setBackground(new java.awt.Color(255, 85, 30));
        bt_Asig.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Asig.setForeground(new java.awt.Color(255, 255, 255));
        bt_Asig.setText("Asignar");
        bt_Asig.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Asig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AsigActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Entrenador");

        bt_ModCoach.setBackground(new java.awt.Color(255, 255, 0));
        bt_ModCoach.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_ModCoach.setForeground(new java.awt.Color(0, 0, 0));
        bt_ModCoach.setText("cambiar");
        bt_ModCoach.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_ModCoach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ModCoachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout puertaLayout = new javax.swing.GroupLayout(puerta);
        puerta.setLayout(puertaLayout);
        puertaLayout.setHorizontalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(bt_Mod)
                                .addGap(18, 18, 18)
                                .addComponent(bt_Mem)
                                .addGap(18, 18, 18)
                                .addComponent(bt_Eli))
                            .addComponent(jLabel4))
                        .addGap(141, 141, 141)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(bt_Asig)
                                .addGap(18, 18, 18)
                                .addComponent(bt_ModCoach))))
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(puertaLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2)
                    .addContainerGap(676, Short.MAX_VALUE)))
        );
        puertaLayout.setVerticalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Mod)
                    .addComponent(bt_Mem)
                    .addComponent(bt_Eli)
                    .addComponent(bt_Asig)
                    .addComponent(bt_ModCoach))
                .addGap(44, 44, 44))
            .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(puertaLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2)
                    .addContainerGap(417, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_EliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EliActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Cliente, 1, "Seleccione un cliente en la tabla");
        if (dpiStr != null) {
            long dpi = Long.parseLong(dpiStr);
            int filas = dao.eliminar(dpi);

            if (filas > 0) {
                JOptionPane.showMessageDialog(this, "Cliente eliminado");
                cargarLista();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro un empleado con ese DPI");
            }

        }
    }//GEN-LAST:event_bt_EliActionPerformed

    private void bt_ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ModActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Cliente, 1, "Seleccione un cliente en la tabla");
        if (dpiStr != null) {
            long mdpi = Long.parseLong(dpiStr);
            Cliente cliente = dao.buscar(mdpi);

            if (cliente != null) {
                long dpi = cliente.getDpi();
                String nombre = cliente.getNombre();
                String apellido = cliente.getApellido();
                String password = cliente.getPassword();
                String telefono = cliente.getTelefono();
                String direccion = cliente.getDireccion();
                Utils.mostrarPanel(puerta, new modCliente(dpi, nombre, apellido, password, telefono, direccion));

            } else {
                JOptionPane.showMessageDialog(this, "No se encontro empleado con ese DPI");
            }

        }
    }//GEN-LAST:event_bt_ModActionPerformed

    private void bt_MemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_MemActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Cliente, 1, "Seleccione un cliente en la tabla");
        if (dpiStr != null) {
            long dpi = Long.parseLong(dpiStr);
            Utils.mostrarPanel(puerta, new Membresias(dpi));
        }
    }//GEN-LAST:event_bt_MemActionPerformed

    private void bt_AsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AsigActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Cliente, 1, "Seleccione un cliente en la tabla");
        if (dpiStr != null) {
            long dpi = Long.parseLong(dpiStr);
            Utils.mostrarPanel(puerta, new Asignar(dpi));
        }
    }//GEN-LAST:event_bt_AsigActionPerformed

    private void bt_ModCoachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ModCoachActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Cliente, 1, "Seleccione un cliente en la tabla");
        if (dpiStr != null) {
            long dpi = Long.parseLong(dpiStr);
            Entrenador_Cliente enCli = enCliDao.buscarPorCliente(dpi);
            if (enCli != null) {
                int idAsig = enCli.getAsignacion();
                long dpi_entrenador = enCli.getDpi_entrenador();
                Date fechaAsig = enCli.getFechaAsignacion();
                Date fechaFin = enCli.getFechaFin();
                
                Utils.mostrarPanel(puerta, new mod_Asig(idAsig, dpi_entrenador, dpi, fechaAsig, fechaFin));
            } else {
                JOptionPane.showMessageDialog(this, "Error de dato");
            }
        }
    }//GEN-LAST:event_bt_ModCoachActionPerformed
    public void cargarLista() {
        DefaultTableModel modelo = (DefaultTableModel) tab_Cliente.getModel();
        modelo.setRowCount(0);
        List<Entrenador_Cliente> lista = enCliDao.listar();

        for (Entrenador_Cliente enCli : lista) {
            modelo.addRow(new Object[]{
                enCli.getAsignacion(),
                enCli.getDpi_cliente(),
                Utils.nombreCliente(enCli.getDpi_cliente()),
                Utils.nombreEntrenador(enCli.getDpi_entrenador())
            });
        }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Asig;
    private javax.swing.JButton bt_Eli;
    private javax.swing.JButton bt_Mem;
    private javax.swing.JButton bt_Mod;
    private javax.swing.JButton bt_ModCoach;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel puerta;
    private javax.swing.JTable tab_Cliente;
    // End of variables declaration//GEN-END:variables
}

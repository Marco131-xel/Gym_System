package main.interfaz.empleado;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.dao.ClienteDao;
import main.models.Cliente;
import main.utils.Utils;

/**
 *
 * @author marco
 */
public class ListaClientes extends javax.swing.JPanel {

    /**
     * Creates new form ListaClientes
     */
    
    ClienteDao dao = new ClienteDao();
    public ListaClientes() {
        initComponents();
        cargarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Cliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_Eli = new javax.swing.JTextField();
        txt_Mod = new javax.swing.JTextField();
        bt_Mod = new javax.swing.JButton();
        bt_Eli = new javax.swing.JButton();

        puerta.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 85, 30));
        jLabel1.setText("Modificar");

        tab_Cliente.setBackground(new java.awt.Color(255, 85, 30));
        tab_Cliente.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        tab_Cliente.setForeground(new java.awt.Color(255, 255, 255));
        tab_Cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DPI", "Nombre", "Apellido", "Password", "Telefono", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab_Cliente);

        jLabel2.setFont(new java.awt.Font("FreeMono", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 85, 30));
        jLabel2.setText("Lista Clientes");

        jLabel3.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 85, 30));
        jLabel3.setText("Eliminar");

        txt_Eli.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        txt_Eli.setForeground(new java.awt.Color(0, 0, 0));
        txt_Eli.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 85, 30)));

        txt_Mod.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        txt_Mod.setForeground(new java.awt.Color(0, 0, 0));
        txt_Mod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 85, 30)));

        bt_Mod.setBackground(new java.awt.Color(255, 85, 30));
        bt_Mod.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Mod.setForeground(new java.awt.Color(255, 255, 255));
        bt_Mod.setText("Modificar");
        bt_Mod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ModActionPerformed(evt);
            }
        });

        bt_Eli.setBackground(new java.awt.Color(255, 85, 30));
        bt_Eli.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Eli.setForeground(new java.awt.Color(255, 255, 255));
        bt_Eli.setText("Eliminar");
        bt_Eli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Eli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout puertaLayout = new javax.swing.GroupLayout(puerta);
        puerta.setLayout(puertaLayout);
        puertaLayout.setHorizontalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(txt_Mod, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bt_Mod))
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(txt_Eli, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bt_Eli)))))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(puertaLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2)
                    .addContainerGap(676, Short.MAX_VALUE)))
        );
        puertaLayout.setVerticalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Eli, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Eli))
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Mod, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_Mod))
                .addGap(32, 32, 32))
            .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(puertaLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jLabel2)
                    .addContainerGap(417, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_EliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EliActionPerformed
        // TODO add your handling code here:
        try {
            long dpi = Long.parseLong(txt_Eli.getText());
            int filas = dao.eliminar(dpi);

            if (filas > 0) {
                JOptionPane.showMessageDialog(this, "Cliente eliminado");
                txt_Eli.setText("");
                cargarLista();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro un empleado con ese DPI");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El DPI debe ser un numero valido");
        }
    }//GEN-LAST:event_bt_EliActionPerformed

    private void bt_ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ModActionPerformed
        // TODO add your handling code here:
        try {
            long mdpi = Long.parseLong(txt_Mod.getText());
            Cliente cliente = dao.buscar(mdpi);

            if (cliente != null) {
                long dpi = cliente.getDpi();
                String nombre = cliente.getNombre();
                String apellido = cliente.getApellido();
                String password = cliente.getPassword();
                String telefono = cliente.getTelefono();
                String direccion = cliente.getDireccion();
                Utils.mostrarPanel(puerta, new modCliente(dpi, nombre, apellido, password, telefono, direccion));
                
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro empleado con ese DPI");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El DPI debe ser un numero valido");
        }
    }//GEN-LAST:event_bt_ModActionPerformed
    public void cargarLista() {
        DefaultTableModel modelo = (DefaultTableModel) tab_Cliente.getModel();
        modelo.setRowCount(0);
        List<Cliente> lista = dao.listar();

        for (Cliente cliente : lista) {
            modelo.addRow(new Object[]{
                cliente.getDpi(),
                cliente.getNombre(),
                cliente.getApellido(),
                cliente.getPassword(),
                cliente.getTelefono(),
                cliente.getDireccion(),
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Eli;
    private javax.swing.JButton bt_Mod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel puerta;
    private javax.swing.JTable tab_Cliente;
    private javax.swing.JTextField txt_Eli;
    private javax.swing.JTextField txt_Mod;
    // End of variables declaration//GEN-END:variables
}

package main.interfaz.empleado.inventario;

import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import main.dao.*;
import main.models.*;
import main.utils.Utils;
/**
 *
 * @author marco
 */
public class lista_Inventario extends javax.swing.JPanel {

    /**
     * Creates new form lista_Inventario
     */
    
    InventarioDao dao = new InventarioDao();
    
    public lista_Inventario() {
        initComponents();
        cargarLista();
        JTableHeader header = tab_Inventario.getTableHeader();
        header.setBackground(Color.BLUE);
        header.setForeground(Color.black);
        header.setFont(new Font("Free Mono", Font.BOLD, 15));
        tab_Inventario.setGridColor(Color.WHITE);
        tab_Inventario.setShowVerticalLines(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Inventario = new javax.swing.JTable();

        puerta.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("FreeMono", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(20, 71, 230));
        jLabel1.setText("Lista de Inventario");

        tab_Inventario.setBackground(new java.awt.Color(20, 71, 230));
        tab_Inventario.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        tab_Inventario.setForeground(new java.awt.Color(255, 255, 255));
        tab_Inventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Sucursal", "ID Equipo", "Nombre", "Tipo", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab_Inventario);
        if (tab_Inventario.getColumnModel().getColumnCount() > 0) {
            tab_Inventario.getColumnModel().getColumn(0).setMinWidth(80);
            tab_Inventario.getColumnModel().getColumn(0).setMaxWidth(80);
            tab_Inventario.getColumnModel().getColumn(1).setMinWidth(150);
            tab_Inventario.getColumnModel().getColumn(1).setMaxWidth(150);
            tab_Inventario.getColumnModel().getColumn(2).setMinWidth(80);
            tab_Inventario.getColumnModel().getColumn(2).setMaxWidth(80);
            tab_Inventario.getColumnModel().getColumn(4).setMinWidth(100);
            tab_Inventario.getColumnModel().getColumn(4).setMaxWidth(100);
            tab_Inventario.getColumnModel().getColumn(5).setMinWidth(80);
            tab_Inventario.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        javax.swing.GroupLayout puertaLayout = new javax.swing.GroupLayout(puerta);
        puerta.setLayout(puertaLayout);
        puertaLayout.setHorizontalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, puertaLayout.createSequentialGroup()
                        .addGap(0, 31, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        puertaLayout.setVerticalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(132, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void cargarLista() {
        DefaultTableModel modelo = (DefaultTableModel) tab_Inventario.getModel();
        modelo.setRowCount(0);
        List<Inventario> lista = dao.listar();

        for (Inventario inv : lista) {
            modelo.addRow(new Object[]{
                inv.getId(),
                Utils.getSucursalNombre(inv.getIdSucursal()),
                inv.getIdEquipo(),
                nombre(inv.getIdEquipo()),
                tipo(inv.getIdEquipo()),
                inv.getCantidad()
            });
        }
    }
    
    private String nombre(int id) {
        EquipoDao dao = new EquipoDao();
        Equipo equi = dao.buscar(id);
        if (equi != null) {
            return equi.getNombre();
        } else {
            return "Desconocido";
        }
    }
    
    private String tipo(int id) {
        EquipoDao dao = new EquipoDao();
        Equipo equi = dao.buscar(id);
        if (equi != null) {
            return equi.getTipo();
        } else {
            return "Desconocido";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel puerta;
    private javax.swing.JTable tab_Inventario;
    // End of variables declaration//GEN-END:variables
}

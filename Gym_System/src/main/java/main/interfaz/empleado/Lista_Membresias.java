package main.interfaz.empleado;

import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.dao.MembresiasDao;
import main.models.Membresia;
import main.models.MembresiaDetalle;
import main.utils.Utils;

/**
 *
 * @author marco
 */
public class Lista_Membresias extends javax.swing.JPanel {

    /**
     * Creates new form Lista_Membresias
     */
    MembresiasDao dao = new MembresiasDao();

    public Lista_Membresias() {
        initComponents();
        cargarLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puerta = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_Mem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bt_Mod = new javax.swing.JButton();
        bt_Eli = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        bt_Asi = new javax.swing.JButton();
        bt_Pagos = new javax.swing.JButton();

        puerta.setBackground(new java.awt.Color(255, 255, 255));

        tab_Mem.setBackground(new java.awt.Color(204, 0, 204));
        tab_Mem.setFont(new java.awt.Font("FreeMono", 1, 14)); // NOI18N
        tab_Mem.setForeground(new java.awt.Color(255, 255, 255));
        tab_Mem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "DPI", "Cliente", "Tipo", "Fecha Inicio", "Fecha Fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tab_Mem);

        jLabel1.setFont(new java.awt.Font("FreeMono", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 204));
        jLabel1.setText("Lista de Membresias");

        jLabel3.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 204));
        jLabel3.setText("Acciones");

        bt_Mod.setBackground(new java.awt.Color(255, 255, 0));
        bt_Mod.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Mod.setForeground(new java.awt.Color(0, 0, 0));
        bt_Mod.setText("modificar");
        bt_Mod.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_ModActionPerformed(evt);
            }
        });

        bt_Eli.setBackground(new java.awt.Color(204, 0, 0));
        bt_Eli.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Eli.setForeground(new java.awt.Color(255, 255, 255));
        bt_Eli.setText("eliminar");
        bt_Eli.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Eli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_EliActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("FreeMono", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 204));
        jLabel2.setText("Servicios");

        bt_Asi.setBackground(new java.awt.Color(0, 255, 0));
        bt_Asi.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Asi.setForeground(new java.awt.Color(0, 0, 0));
        bt_Asi.setText("Asistencias");
        bt_Asi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Asi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_AsiActionPerformed(evt);
            }
        });

        bt_Pagos.setBackground(new java.awt.Color(0, 0, 204));
        bt_Pagos.setFont(new java.awt.Font("FreeMono", 1, 18)); // NOI18N
        bt_Pagos.setForeground(new java.awt.Color(255, 255, 255));
        bt_Pagos.setText("Pagos");
        bt_Pagos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_Pagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_PagosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout puertaLayout = new javax.swing.GroupLayout(puerta);
        puerta.setLayout(puertaLayout);
        puertaLayout.setHorizontalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(puertaLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(bt_Mod)
                                .addGap(18, 18, 18)
                                .addComponent(bt_Eli))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(puertaLayout.createSequentialGroup()
                                .addComponent(bt_Asi)
                                .addGap(26, 26, 26)
                                .addComponent(bt_Pagos))
                            .addComponent(jLabel2))
                        .addGap(189, 189, 189)))
                .addContainerGap())
        );
        puertaLayout.setVerticalGroup(
            puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(puertaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(puertaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Mod)
                    .addComponent(bt_Eli)
                    .addComponent(bt_Asi)
                    .addComponent(bt_Pagos))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(puerta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_EliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_EliActionPerformed
        // TODO add your handling code here:
        String sId = Utils.selecDatTable(tab_Mem, 0, "Seleccione un membresia en la tabla");
        if (sId != null) {
            int id = Integer.parseInt(sId);
            int filas = dao.eliminar(id);
            
            if (filas > 0) {
                JOptionPane.showMessageDialog(this, "Membresia eliminada");
                cargarLista();
            } else {
                JOptionPane.showMessageDialog(this, "No se encontro el ID de membresia");
            }
        }
    }//GEN-LAST:event_bt_EliActionPerformed

    private void bt_ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ModActionPerformed
        // TODO add your handling code here:
        String sId = Utils.selecDatTable(tab_Mem, 0, "Seleccione un membresia en la tabla");
        if (sId != null) {
            int id = Integer.parseInt(sId);
            Membresia mem = dao.buscar(id);

            if (mem != null) {
                long dpi = mem.getDpi();
                int tipo = mem.getTipo();
                Date fechaInicio = mem.getFechaInicio();
                Date fechaFin = mem.getFechaFin();
                Utils.mostrarPanel(puerta, new ModMembresia(id, dpi, tipo, fechaInicio, fechaFin));

            } else {
                JOptionPane.showMessageDialog(this, "No se encontro ID de membresia");
            }
        }
    }//GEN-LAST:event_bt_ModActionPerformed

    private void bt_AsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_AsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_AsiActionPerformed

    private void bt_PagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_PagosActionPerformed
        // TODO add your handling code here:
        String dpiStr = Utils.selecDatTable(tab_Mem, 1, "Seleccione el DPI en la tabla");
        if (dpiStr != null) {
            long dpi = Long.parseLong(dpiStr);
            Utils.mostrarPanel(puerta, new Pagos(dpi));
        } 
    }//GEN-LAST:event_bt_PagosActionPerformed
    public void cargarLista() {
        DefaultTableModel modelo = (DefaultTableModel) tab_Mem.getModel();
        modelo.setRowCount(0);
        List<MembresiaDetalle> lista = dao.listarMembresias();

        for (MembresiaDetalle m : lista) {
            modelo.addRow(new Object[]{
                m.getIdMembresia(),
                m.getDpi(),
                m.getCliente(),
                m.getTipoMembresia(),
                m.getFechaInicio(),
                m.getFechaFin()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_Asi;
    private javax.swing.JButton bt_Eli;
    private javax.swing.JButton bt_Mod;
    private javax.swing.JButton bt_Pagos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel puerta;
    private javax.swing.JTable tab_Mem;
    // End of variables declaration//GEN-END:variables
}
